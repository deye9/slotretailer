sudo wails serve
sudo wails build

// Cross-Compilation
sudo wails build -x windows/amd64
https://github.com/wailsapp/xgo

// https://5f63ea94363f0000162d9307.mockapi.io/api/v1/Products


SQLite - How to create a local SQLite3 database file on Mac?: https://tableplus.com/blog/2018/07/sqlite-how-to-create-a-local-database-file-on-mac.html
How To Pass Data Between Components In Vue.js: https://www.smashingmagazine.com/2020/01/data-components-vue-js/#:~:text=1.-,Using%20Props%20To%20Share%20Data%20From%20Parent%20To%20Child,parent%20to%20a%20child%20component!

PEM must check for their team per week 
PEM to action based on the result of the check.


GIT COMMANDS
rename the GIT branch locally
git branch --move <old_name> <new_name>

clear && git add . && git commit -m 'setup' && git push origin master
clear && git add . && git commit -m 'initial commit' && git push origin master --force

https://www.sqlitetutorial.net/sqlite-replace-statement/
https://gist.github.com/justincase/5469009
https://blog.golang.org/laws-of-reflection


// Check if the user is an admin via
this.$store.state.isAdmin

TODO:
1. Loader for data entry pages
3. Reporting
4. Sync [order => post, get]
6. Dashboard
7. Sync details
8. Store transfers
9. Search
10. Edit Orders
12. Invoice generation
13. Email invoice to customer
14. Pick up connection string details dynamically.
15. Log files generation [delete after a week]

ORDERS:
1. Display customer details after entering phone number; ====== done
2. Make it a searchable select [itemcode, itemname, imei]; ====== done
4. Add Payment methods [Cash, POS, Bank Transfer, EasyBuy, Voucher]; ====== done
3. Display item code beside itemname; ====== done
7. Prompt on save; ====== done
6. VAT; ====== done
5. Allow for draft Sales Order

POS / Bank Transfer = Display list of banks and get amount paid.
Vouchers = Allow for entry of voucher value

CLEAN UP database.go [func randate() and lines 151 to 153]

iis
Nodejs extensions for iis

jsonString, err := json.Marshal(order)
fmt.Println("Data is: ",string(jsonString), err)


https://hub.docker.com/r/mysql/mysql-server/
docker run --name=mysql1 -d mysql/mysql-server:latest
docker run -p 3306:3306 --name mysql1 -e MYSQL_ROOT_PASSWORD=l@ngt@ng1234 -d mysql/mysql-server:latest

W@HIlyM4t8AKGiDJ@qaLygV@gSo


appuser = password
CREATE USER ‘appuser’@‘%’ IDENTIFIED BY ‘password’;

ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'l@ngt@ng1234';
CREATE USER 'foo'@'%' IDENTIFIED WITH mysql_native_password BY 'bar';
FLUSH PRIVILEGES;